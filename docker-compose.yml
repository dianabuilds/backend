version: "3.9"

x-backend-defaults: &backend-defaults
  build: .
  volumes:
    - .:/app
  env_file:
    - .env
    - apps/backend/.env
  environment: &backend-env
    PYTHONPATH: /app
  depends_on:
    - postgres
    - redis
    - minio

services:
  backend-public:
    <<: *backend-defaults
    command: >
      sh -c 'uvicorn apps.backend.app.api_gateway.main:app --host $$UVICORN_HOST --port $$APP_PORT --reload'
    environment:
      <<: *backend-env
      APP_API_CONTOUR: public
      APP_PORT: "8010"
      UVICORN_HOST: 0.0.0.0
    ports:
      - "8010:8010"
    profiles: ["local", "dev"]

  backend-admin:
    <<: *backend-defaults
    command: >
      sh -c 'uvicorn apps.backend.app.api_gateway.main:app --host $$UVICORN_HOST --port $$APP_PORT --reload'
    environment:
      <<: *backend-env
      APP_API_CONTOUR: admin
      APP_PORT: "8011"
      UVICORN_HOST: 0.0.0.0
    ports:
      - "8011:8011"
    profiles: ["local", "dev"]

  backend-ops:
    <<: *backend-defaults
    command: >
      sh -c 'uvicorn apps.backend.app.api_gateway.main:app --host $$UVICORN_HOST --port $$APP_PORT --reload'
    environment:
      <<: *backend-env
      APP_API_CONTOUR: ops
      APP_PORT: "8012"
      UVICORN_HOST: 0.0.0.0
    ports:
      - "8012:8012"
    profiles: ["local", "dev"]

  backend-ci:
    <<: *backend-defaults
    environment:
      <<: *backend-env
    command: make lint typecheck test
    profiles: ["test"]

  ddd:
    build: .
    command: make run-smoke
    volumes:
      - .:/app
    env_file:
      - apps/backend/.env
    ports:
      - "8000:8000"
    profiles: ["local", "dev"]

  admin:
    build: ./apps/admin
    environment:
      - APP_ENV_MODE=${APP_ENV_MODE}
    ports:
      - "3000:3000"
    profiles: ["local", "dev"]

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: app
    ports:
      - "5432:5432"
    profiles: ["local", "dev", "test"]

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    profiles: ["local", "dev", "test"]

  minio:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /data --console-address :9001
    ports:
      - "9000:9000"
      - "9001:9001"
    profiles: ["local", "dev", "test"]

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    profiles: ["local"]

  wiremock:
    image: wiremock/wiremock
    ports:
      - "8083:8080"
    profiles: ["test"]

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    ports:
      - "4317:4317"
    profiles: ["local", "dev"]

  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    profiles: ["local", "dev"]

volumes:
  postgres_data:
  minio_data:
