{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "paths": {
    "/metrics/rum": {
      "post": {
        "tags": [
          "metrics"
        ],
        "summary": "Rum Metrics",
        "description": "\u041f\u0440\u0438\u0451\u043c\u043d\u0438\u043a \u043f\u0440\u043e\u0441\u0442\u044b\u0445 RUM-\u0441\u043e\u0431\u044b\u0442\u0438\u0439 \u0441 \u0444\u0440\u043e\u043d\u0442\u0435\u043d\u0434\u0430.\n\u0422\u0435\u043b\u043e: { event: str, ts: int, url: str, data: any }",
        "operationId": "rum_metrics_metrics_rum_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Rum Metrics Metrics Rum Post"
                }
              }
            }
          }
        }
      }
    },
    "/admin/telemetry/rum": {
      "get": {
        "tags": [
          "admin-telemetry"
        ],
        "summary": "List Rum Events",
        "description": "\u0410\u0434\u043c\u0438\u043d: \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435 RUM-\u0441\u043e\u0431\u044b\u0442\u0438\u044f (\u043f\u043e \u0443\u0431\u044b\u0432\u0430\u043d\u0438\u044e \u0432\u0440\u0435\u043c\u0435\u043d\u0438).",
        "operationId": "list_rum_events_admin_telemetry_rum_get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 200,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "title": "Response List Rum Events Admin Telemetry Rum Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/telemetry/rum/summary": {
      "get": {
        "tags": [
          "admin-telemetry"
        ],
        "summary": "Rum Summary",
        "description": "\u0410\u0434\u043c\u0438\u043d: \u0441\u0432\u043e\u0434\u043a\u0430 \u043f\u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u043c \u0441\u043e\u0431\u044b\u0442\u0438\u044f\u043c.\n- counts \u043f\u043e event\n- \u0441\u0440\u0435\u0434\u043d\u044f\u044f \u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c login_attempt.dur_ms\n- \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u0442\u0430\u0439\u043c\u0438\u043d\u0433\u0438 (\u0441\u0440\u0435\u0434\u043d\u0438\u0435 \u043f\u043e \u043e\u043a\u043d\u0443): ttfb, domContentLoaded, loadEvent",
        "operationId": "rum_summary_admin_telemetry_rum_summary_get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "window",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 500,
              "title": "Window"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Rum Summary Admin Telemetry Rum Summary Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login",
        "operationId": "login_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Refresh",
        "operationId": "refresh_auth_refresh_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Token"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Signup",
        "operationId": "signup_auth_signup_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Signup Auth Signup Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/verify": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Verify Email",
        "operationId": "verify_email_auth_verify_get",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Verify Email Auth Verify Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/change-password": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Change Password",
        "operationId": "change_password_auth_change_password_post",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Change Password Auth Change Password Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Logout",
        "operationId": "logout_auth_logout_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Logout Auth Logout Post"
                }
              }
            }
          }
        }
      }
    },
    "/auth/evm/nonce": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Evm Nonce",
        "operationId": "evm_nonce_auth_evm_nonce_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "User ID",
              "title": "User Id"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Evm Nonce Auth Evm Nonce Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/evm/verify": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Evm Verify",
        "operationId": "evm_verify_auth_evm_verify_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EVMVerify"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Evm Verify Auth Evm Verify Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/quests": {
      "get": {
        "tags": [
          "quests"
        ],
        "summary": "List quests",
        "description": "Return all published quests.",
        "operationId": "list_quests_quests_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/QuestOut"
                  },
                  "type": "array",
                  "title": "Response List Quests Quests Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "quests"
        ],
        "summary": "Create quest",
        "description": "Create a new quest owned by the current user.",
        "operationId": "create_quest_quests_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/quests/search": {
      "get": {
        "tags": [
          "quests"
        ],
        "summary": "Search quests",
        "operationId": "search_quests_quests_search_get",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Q"
            }
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tags"
            }
          },
          {
            "name": "author_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Author Id"
            }
          },
          {
            "name": "free_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Free Only"
            }
          },
          {
            "name": "premium_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Premium Only"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "new",
              "title": "Sort By"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Per Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuestOut"
                  },
                  "title": "Response Search Quests Quests Search Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/quests/{slug}": {
      "get": {
        "tags": [
          "quests"
        ],
        "summary": "Get quest",
        "description": "Fetch a quest by slug, ensuring access permissions.",
        "operationId": "get_quest_quests__slug__get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Slug"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/quests/{quest_id}": {
      "put": {
        "tags": [
          "quests"
        ],
        "summary": "Update quest",
        "description": "Modify quest fields if the user is the author.",
        "operationId": "update_quest_quests__quest_id__put",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "quest_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Quest Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "quests"
        ],
        "summary": "Delete quest",
        "description": "Soft delete a quest owned by the current user.",
        "operationId": "delete_quest_quests__quest_id__delete",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "quest_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Quest Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Delete Quest Quests  Quest Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/quests/{quest_id}/publish": {
      "post": {
        "tags": [
          "quests"
        ],
        "summary": "Publish quest",
        "description": "Mark a draft quest as published.",
        "operationId": "publish_quest_quests__quest_id__publish_post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "quest_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Quest Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/quests/{quest_id}/start": {
      "post": {
        "tags": [
          "quests"
        ],
        "summary": "Start quest",
        "description": "Begin or restart progress for a quest.",
        "operationId": "start_quest_quests__quest_id__start_post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "quest_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Quest Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestProgressOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/quests/{quest_id}/progress": {
      "get": {
        "tags": [
          "quests"
        ],
        "summary": "Get progress",
        "description": "Retrieve progress of the current user in a quest.",
        "operationId": "get_progress_quests__quest_id__progress_get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "quest_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Quest Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestProgressOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/quests/{quest_id}/nodes/{node_id}": {
      "get": {
        "tags": [
          "quests"
        ],
        "summary": "Get quest node",
        "description": "Return node details within a quest and update progress.",
        "operationId": "get_quest_node_quests__quest_id__nodes__node_id__get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "quest_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Quest Id"
            }
          },
          {
            "name": "node_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Node Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/quests/{quest_id}/buy": {
      "post": {
        "tags": [
          "quests"
        ],
        "summary": "Buy quest",
        "description": "Purchase access to a paid quest.",
        "operationId": "buy_quest_quests__quest_id__buy_post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "quest_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Quest Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestBuyIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Buy Quest Quests  Quest Id  Buy Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/ai/quests/versions/{version_id}/validation": {
      "get": {
        "tags": [
          "admin-ai-quests"
        ],
        "summary": "Get Version Validation",
        "operationId": "get_version_validation_admin_ai_quests_versions__version_id__validation_get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Version Id"
            }
          },
          {
            "name": "recalc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "\u041f\u0435\u0440\u0435\u0441\u0447\u0438\u0442\u0430\u0442\u044c \u043e\u0442\u0447\u0451\u0442 \u043f\u0440\u0438\u043d\u0443\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e",
              "default": false,
              "title": "Recalc"
            },
            "description": "\u041f\u0435\u0440\u0435\u0441\u0447\u0438\u0442\u0430\u0442\u044c \u043e\u0442\u0447\u0451\u0442 \u043f\u0440\u0438\u043d\u0443\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Version Validation Admin Ai Quests Versions  Version Id  Validation Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/quests/create": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Create a quest (skeleton)",
        "operationId": "create_quest_admin_quests_create_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestCreateIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/quests/{quest_id}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Quest with versions",
        "operationId": "get_quest_admin_quests__quest_id__get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "quest_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Quest Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestSummary"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/quests/{quest_id}/draft": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Create a draft version",
        "operationId": "create_draft_admin_quests__quest_id__draft_post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "quest_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Quest Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/quests/versions/{version_id}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get version graph",
        "operationId": "get_version_admin_quests_versions__version_id__get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Version Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionGraphOutput"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "Delete draft version",
        "operationId": "delete_draft_admin_quests_versions__version_id__delete",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Version Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/quests/versions/{version_id}/graph": {
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "Replace graph of the version",
        "operationId": "put_graph_admin_quests_versions__version_id__graph_put",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Version Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VersionGraphInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/quests/versions/{version_id}/validate": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Validate graph",
        "operationId": "validate_version_admin_quests_versions__version_id__validate_post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Version Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/quests/versions/{version_id}/autofix": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Autofix graph (basic)",
        "operationId": "autofix_version_admin_quests_versions__version_id__autofix_post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Version Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/quests/versions/{version_id}/publish": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Publish version",
        "operationId": "publish_version_admin_quests_versions__version_id__publish_post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Version Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/quests/versions/{version_id}/rollback": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Rollback to version",
        "operationId": "rollback_version_admin_quests_versions__version_id__rollback_post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Version Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/quests/versions/{version_id}/simulate": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Simulate run",
        "operationId": "simulate_version_admin_quests_versions__version_id__simulate_post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Version Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimulateIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimulateResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/quests": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Admin list quests with filters",
        "operationId": "admin_list_quests_admin_quests_get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Q"
            }
          },
          {
            "name": "author_role",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^(admin|moderator|user)$"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Author Role"
            }
          },
          {
            "name": "author_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Author Id"
            }
          },
          {
            "name": "draft",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Draft"
            }
          },
          {
            "name": "deleted",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Deleted"
            }
          },
          {
            "name": "free_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Free Only"
            }
          },
          {
            "name": "premium_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Premium Only"
            }
          },
          {
            "name": "length",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^(short|long)$"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Length"
            }
          },
          {
            "name": "created_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created From"
            }
          },
          {
            "name": "created_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created To"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(new|price|title|popularity)$",
              "default": "new",
              "title": "Sort By"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Per Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuestOut"
                  },
                  "title": "Response Admin List Quests Admin Quests Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/quests/{quest_id}/meta": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get quest metadata",
        "operationId": "get_quest_meta_admin_quests__quest_id__meta_get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "quest_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Quest Id"
            }
          },
          {
            "name": "workspace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestOut"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "admin"
        ],
        "summary": "Update quest metadata",
        "operationId": "patch_quest_meta_admin_quests__quest_id__meta_patch",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "quest_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Quest Id"
            }
          },
          {
            "name": "workspace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestOut"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/quests/{quest_id}/validation": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Validate quest",
        "operationId": "get_quest_validation_admin_quests__quest_id__validation_get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "quest_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Quest Id"
            }
          },
          {
            "name": "workspace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationReport"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/quests/{quest_id}/autofix": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Apply autofix to quest",
        "operationId": "post_quest_autofix_admin_quests__quest_id__autofix_post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "quest_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Quest Id"
            }
          },
          {
            "name": "workspace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutofixRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutofixReport"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/quests/{quest_id}/publish": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Publish quest",
        "operationId": "post_quest_publish_admin_quests__quest_id__publish_post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "quest_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Quest Id"
            }
          },
          {
            "name": "workspace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublishRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/notifications": {
      "get": {
        "tags": [
          "notifications"
        ],
        "summary": "List notifications",
        "operationId": "list_notifications_notifications_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/NotificationOut"
                  },
                  "type": "array",
                  "title": "Response List Notifications Notifications Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/notifications/{notification_id}/read": {
      "post": {
        "tags": [
          "notifications"
        ],
        "summary": "Mark notification read",
        "operationId": "mark_read_notifications__notification_id__read_post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "notification_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Notification Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Mark Read Notifications  Notification Id  Read Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/notifications": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Send notification to user",
        "operationId": "send_notification_admin_notifications_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendNotificationPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/notifications/broadcast": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Create broadcast campaign (or dry-run)",
        "operationId": "create_broadcast_admin_notifications_broadcast_post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BroadcastCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "List broadcast campaigns",
        "operationId": "list_broadcasts_admin_notifications_broadcast_get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/notifications/broadcast/{campaign_id}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get campaign",
        "operationId": "get_broadcast_admin_notifications_broadcast__campaign_id__get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Campaign Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/notifications/broadcast/{campaign_id}/cancel": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Cancel campaign",
        "operationId": "cancel_broadcast_admin_notifications_broadcast__campaign_id__cancel_post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Campaign Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/notifications/campaigns": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "List campaigns",
        "operationId": "list_campaigns_admin_notifications_campaigns_get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/notifications/campaigns/{campaign_id}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get campaign",
        "operationId": "get_campaign_admin_notifications_campaigns__campaign_id__get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Campaign Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "admin"
        ],
        "summary": "Update campaign",
        "operationId": "update_campaign_admin_notifications_campaigns__campaign_id__patch",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Campaign Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CampaignUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/notifications/campaigns/{campaign_id}/send": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Dispatch campaign",
        "operationId": "send_campaign_admin_notifications_campaigns__campaign_id__send_post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "campaign_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Campaign Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/premium/plans": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "List subscription plans",
        "operationId": "list_plans_admin_premium_plans_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionPlanOut"
                  },
                  "type": "array",
                  "title": "Response List Plans Admin Premium Plans Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Create subscription plan",
        "operationId": "create_plan_admin_premium_plans_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionPlanIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPlanOut"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/premium/plans/{plan_id}": {
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "Update subscription plan",
        "operationId": "update_plan_admin_premium_plans__plan_id__put",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "plan_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Plan Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionPlanIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPlanOut"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "Delete subscription plan",
        "operationId": "delete_plan_admin_premium_plans__plan_id__delete",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "plan_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Plan Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Delete Plan Admin Premium Plans  Plan Id  Delete"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/media": {
      "post": {
        "tags": [
          "media"
        ],
        "summary": "Upload Media",
        "description": "Accept an uploaded image and return its public URL.",
        "operationId": "upload_media_media_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_media_media_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/media": {
      "get": {
        "tags": [
          "admin-media"
        ],
        "summary": "List media assets",
        "operationId": "list_media_assets_admin_media_get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MediaAssetOut"
                  },
                  "title": "Response List Media Assets Admin Media Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin-media"
        ],
        "summary": "Upload media asset",
        "operationId": "upload_media_asset_admin_media_post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_media_asset_admin_media_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/achievements": {
      "get": {
        "tags": [
          "achievements"
        ],
        "summary": "List achievements",
        "operationId": "list_achievements_achievements_get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AchievementOut"
                  },
                  "title": "Response List Achievements Achievements Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/achievements": {
      "get": {
        "tags": [
          "admin",
          "achievements"
        ],
        "summary": "List achievements (admin)",
        "operationId": "list_achievements_admin_admin_achievements_get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AchievementAdminOut"
                  },
                  "title": "Response List Achievements Admin Admin Achievements Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin",
          "achievements"
        ],
        "summary": "Create achievement",
        "operationId": "create_achievement_admin_admin_achievements_post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AchievementCreateIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AchievementAdminOut"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/achievements/{achievement_id}": {
      "patch": {
        "tags": [
          "admin",
          "achievements"
        ],
        "summary": "Update achievement",
        "operationId": "update_achievement_admin_admin_achievements__achievement_id__patch",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "achievement_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Achievement Id"
            }
          },
          {
            "name": "workspace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AchievementUpdateIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AchievementAdminOut"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin",
          "achievements"
        ],
        "summary": "Delete achievement",
        "operationId": "delete_achievement_admin_admin_achievements__achievement_id__delete",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "achievement_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Achievement Id"
            }
          },
          {
            "name": "workspace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/achievements/{achievement_id}/grant": {
      "post": {
        "tags": [
          "admin",
          "achievements"
        ],
        "summary": "Grant achievement to user",
        "operationId": "grant_achievement_admin_achievements__achievement_id__grant_post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "achievement_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Achievement Id"
            }
          },
          {
            "name": "workspace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserIdIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/achievements/{achievement_id}/revoke": {
      "post": {
        "tags": [
          "admin",
          "achievements"
        ],
        "summary": "Revoke achievement from user",
        "operationId": "revoke_achievement_admin_achievements__achievement_id__revoke_post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "achievement_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Achievement Id"
            }
          },
          {
            "name": "workspace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserIdIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/traces": {
      "post": {
        "tags": [
          "traces"
        ],
        "summary": "Create trace",
        "operationId": "create_trace_traces_post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodeTraceCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeTraceOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "traces"
        ],
        "summary": "List traces",
        "operationId": "list_traces_traces_get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "node_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Node Id"
            }
          },
          {
            "name": "visible_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(all|me)$",
              "default": "all",
              "title": "Visible To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NodeTraceOut"
                  },
                  "title": "Response List Traces Traces Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tags/tags/": {
      "get": {
        "tags": [
          "tags",
          "tags"
        ],
        "summary": "List tags",
        "description": "Retrieve available tags with optional search and popularity filter.",
        "operationId": "list_tags_tags_tags__get",
        "parameters": [
          {
            "name": "workspace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Q"
            }
          },
          {
            "name": "popular",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Popular"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TagOut"
                  },
                  "title": "Response List Tags Tags Tags  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tags",
          "tags"
        ],
        "summary": "Create tag",
        "operationId": "create_tag_tags_tags__post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tags/tags/{slug}": {
      "get": {
        "tags": [
          "tags",
          "tags"
        ],
        "summary": "Get tag",
        "operationId": "get_tag_tags_tags__slug__get",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Slug"
            }
          },
          {
            "name": "workspace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "tags",
          "tags"
        ],
        "summary": "Update tag",
        "operationId": "update_tag_tags_tags__slug__put",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Slug"
            }
          },
          {
            "name": "workspace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tags",
          "tags"
        ],
        "summary": "Delete tag",
        "operationId": "delete_tag_tags_tags__slug__delete",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Slug"
            }
          },
          {
            "name": "workspace_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tags/_health": {
      "get": {
        "tags": [
          "tags"
        ],
        "summary": "Tags Health",
        "operationId": "tags_health_tags__health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Tags Health Tags  Health Get"
                }
              }
            }
          }
        }
      }
    },
    "/admin/menu": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get admin menu",
        "operationId": "get_admin_menu_admin_menu_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/menu/invalidate": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Invalidate admin menu cache",
        "operationId": "invalidate_admin_menu_admin_menu_invalidate_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/flags": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "List feature flags",
        "operationId": "list_flags_admin_flags_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FeatureFlagOut"
                  },
                  "type": "array",
                  "title": "Response List Flags Admin Flags Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/flags/{key}": {
      "patch": {
        "tags": [
          "admin"
        ],
        "summary": "Update feature flag",
        "operationId": "update_flag_admin_flags__key__patch",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeatureFlagUpdateIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureFlagOut"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/cache/stats": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Cache statistics",
        "operationId": "cache_stats_admin_cache_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/cache/invalidate_by_pattern": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Invalidate cache by pattern",
        "operationId": "invalidate_by_pattern_admin_cache_invalidate_by_pattern_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvalidatePatternRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/dashboard": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Admin dashboard data",
        "operationId": "admin_dashboard_admin_dashboard_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/hotfix/patches": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Create content patch",
        "operationId": "create_patch_admin_hotfix_patches_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodePatchCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodePatchOut"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/hotfix/patches/{patch_id}/revert": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Revert patch",
        "operationId": "revert_patch_admin_hotfix_patches__patch_id__revert_post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "patch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Patch Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodePatchOut"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/users": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "List users",
        "operationId": "list_users_admin_users_get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Q"
            }
          },
          {
            "name": "role",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Role"
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Active"
            }
          },
          {
            "name": "premium",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Premium"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminUserOut"
                  },
                  "title": "Response List Users Admin Users Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/users/{user_id}/premium": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Set user premium status",
        "operationId": "set_user_premium_admin_users__user_id__premium_post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPremiumUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/users/{user_id}/role": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Change user role",
        "operationId": "set_user_role_admin_users__user_id__role_post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/workspaces": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "List workspaces",
        "operationId": "list_workspaces_admin_workspaces_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/WorkspaceWithRoleOut"
                  },
                  "type": "array",
                  "title": "Response List Workspaces Admin Workspaces Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Create workspace",
        "operationId": "create_workspace_admin_workspaces_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceOut"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/workspaces/{workspace_id}": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get workspace",
        "operationId": "get_workspace_admin_workspaces__workspace_id__get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceOut"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "admin"
        ],
        "summary": "Update workspace",
        "operationId": "update_workspace_admin_workspaces__workspace_id__patch",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceOut"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "Delete workspace",
        "operationId": "delete_workspace_admin_workspaces__workspace_id__delete",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/workspaces/{workspace_id}/members": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Add workspace member",
        "operationId": "add_member_admin_workspaces__workspace_id__members_post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceMemberIn"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceMemberOut"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "List workspace members",
        "operationId": "list_members_admin_workspaces__workspace_id__members_get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkspaceMemberOut"
                  },
                  "title": "Response List Members Admin Workspaces  Workspace Id  Members Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/workspaces/{workspace_id}/members/{user_id}": {
      "patch": {
        "tags": [
          "admin"
        ],
        "summary": "Update workspace member",
        "operationId": "update_member_admin_workspaces__workspace_id__members__user_id__patch",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceMemberIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceMemberOut"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "Remove workspace member",
        "operationId": "remove_member_admin_workspaces__workspace_id__members__user_id__delete",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workspace Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/transitions": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "List transitions",
        "operationId": "list_transitions_admin_admin_transitions_get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "From"
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "To"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/NodeTransitionType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Type"
            }
          },
          {
            "name": "author",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Author"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Page Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminTransitionOut"
                  },
                  "title": "Response List Transitions Admin Admin Transitions Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/transitions/{transition_id}": {
      "patch": {
        "tags": [
          "admin"
        ],
        "summary": "Update transition",
        "operationId": "update_transition_admin_admin_transitions__transition_id__patch",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "transition_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Transition Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodeTransitionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminTransitionOut"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "Delete transition",
        "operationId": "delete_transition_admin_admin_transitions__transition_id__delete",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "transition_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Transition Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/transitions/disable_by_node": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Disable transitions by node",
        "operationId": "disable_transitions_by_node_admin_transitions_disable_by_node_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransitionDisableRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/ratelimit/rules": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "List rate limit rules",
        "operationId": "list_rules_admin_ratelimit_rules_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "admin"
        ],
        "summary": "Update single rate limit rule",
        "operationId": "update_rule_admin_ratelimit_rules_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RuleUpdatePayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/ratelimit/recent429": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Recent rate limit hits",
        "operationId": "recent_hits_admin_ratelimit_recent429_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/ratelimit/disable": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Toggle rate limiter",
        "operationId": "disable_rate_limit_admin_ratelimit_disable_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RateLimitDisablePayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/audit": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "List audit logs",
        "operationId": "list_audit_logs_admin_audit_get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "actor_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Actor Id"
            }
          },
          {
            "name": "action",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Action"
            }
          },
          {
            "name": "resource",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Resource"
            }
          },
          {
            "name": "workspace_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Workspace Id"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Page Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditLogOut"
                  },
                  "title": "Response List Audit Logs Admin Audit Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/metrics/summary": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Metrics Summary",
        "operationId": "metrics_summary_admin_metrics_summary_get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "range",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "1h",
              "title": "Range"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricsSummary"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/metrics/timeseries": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Metrics Timeseries",
        "description": "\u0422\u0430\u0439\u043c\u0441\u0435\u0440\u0438\u0438: counts per status class (2xx/4xx/5xx) \u0438 p95 latency \u043f\u043e \u0431\u0430\u043a\u0435\u0442\u0430\u043c.",
        "operationId": "metrics_timeseries_admin_metrics_timeseries_get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "range",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "1h",
              "title": "Range"
            }
          },
          {
            "name": "step",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 600,
              "minimum": 10,
              "default": 60,
              "title": "Step"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/metrics/endpoints/top": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Metrics Top Endpoints",
        "description": "\u0422\u043e\u043f \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u043e\u0432 \u043f\u043e p95 | error_rate | rps.",
        "operationId": "metrics_top_endpoints_admin_metrics_endpoints_top_get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "range",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "1h",
              "title": "Range"
            }
          },
          {
            "name": "by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(p95|error_rate|rps)$",
              "default": "p95",
              "title": "By"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/metrics/errors/recent": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Metrics Errors Recent",
        "description": "\u041f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 (4xx/5xx).",
        "operationId": "metrics_errors_recent_admin_metrics_errors_recent_get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/tags/list": {
      "get": {
        "tags": [
          "admin-tags"
        ],
        "summary": "List tags with usage",
        "operationId": "list_tags_admin_tags_list_get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Q"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "default": 200,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TagListItem"
                  },
                  "title": "Response List Tags Admin Tags List Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/tags/{tag_id}/aliases": {
      "get": {
        "tags": [
          "admin-tags"
        ],
        "summary": "List tag aliases",
        "operationId": "get_aliases_admin_tags__tag_id__aliases_get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tag Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AliasOut"
                  },
                  "title": "Response Get Aliases Admin Tags  Tag Id  Aliases Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin-tags"
        ],
        "summary": "Add tag alias",
        "operationId": "post_alias_admin_tags__tag_id__aliases_post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tag Id"
            }
          },
          {
            "name": "alias",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Alias"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AliasOut"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/tags/aliases/{alias_id}": {
      "delete": {
        "tags": [
          "admin-tags"
        ],
        "summary": "Remove tag alias",
        "operationId": "del_alias_admin_tags_aliases__alias_id__delete",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "alias_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Alias Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/tags/merge": {
      "post": {
        "tags": [
          "admin-tags"
        ],
        "summary": "Merge tags (dry-run/apply)",
        "operationId": "merge_tags_admin_tags_merge_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MergeIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MergeReport"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/tags/blacklist": {
      "get": {
        "tags": [
          "admin-tags"
        ],
        "summary": "List blacklisted tags",
        "operationId": "get_blacklist_admin_tags_blacklist_get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Q"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BlacklistItem"
                  },
                  "title": "Response Get Blacklist Admin Tags Blacklist Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin-tags"
        ],
        "summary": "Add tag to blacklist",
        "operationId": "add_blacklist_admin_tags_blacklist_post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlacklistAdd"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlacklistItem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/tags/blacklist/{slug}": {
      "delete": {
        "tags": [
          "admin-tags"
        ],
        "summary": "Remove tag from blacklist",
        "operationId": "delete_blacklist_admin_tags_blacklist__slug__delete",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Slug"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/tags/": {
      "post": {
        "tags": [
          "admin-tags"
        ],
        "summary": "Create tag",
        "operationId": "create_tag_admin_tags__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagListItem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/tags/{tag_id}": {
      "delete": {
        "tags": [
          "admin-tags"
        ],
        "summary": "Delete tag",
        "operationId": "delete_tag_admin_tags__tag_id__delete",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "tag_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tag Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/echo": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "List echo traces",
        "operationId": "list_echo_traces_admin_echo_get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "From"
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "To"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Source"
            }
          },
          {
            "name": "channel",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Channel"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Page Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminEchoTraceOut"
                  },
                  "title": "Response List Echo Traces Admin Echo Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/echo/{trace_id}/anonymize": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Anonymize echo trace",
        "operationId": "anonymize_echo_trace_admin_echo__trace_id__anonymize_post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "trace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Trace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/echo/{trace_id}": {
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "Delete echo trace",
        "operationId": "delete_echo_trace_admin_echo__trace_id__delete",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "trace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Trace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/echo/bulk/anonymize": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Bulk anonymize echo traces",
        "operationId": "bulk_anonymize_echo_admin_echo_bulk_anonymize_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkIds"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/echo/bulk/delete": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Bulk delete echo traces",
        "operationId": "bulk_delete_echo_admin_echo_bulk_delete_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkIds"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/echo/recompute_popularity": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Recompute node popularity",
        "operationId": "recompute_popularity_admin_echo_recompute_popularity_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PopularityRecomputeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/traces": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "List navigation traces",
        "operationId": "list_traces_admin_traces_get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "From"
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "To"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Type"
            }
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Source"
            }
          },
          {
            "name": "channel",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Channel"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date From"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date To"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Page Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/traces/{trace_id}/anonymize": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Anonymize trace (remove user reference)",
        "operationId": "anonymize_trace_admin_traces__trace_id__anonymize_post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "trace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Trace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/traces/{trace_id}": {
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "Delete trace",
        "operationId": "delete_trace_admin_traces__trace_id__delete",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "trace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Trace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/traces/bulk/anonymize": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Bulk anonymize traces",
        "operationId": "bulk_anonymize_traces_admin_traces_bulk_anonymize_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkIds"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/traces/bulk/delete": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Bulk delete traces",
        "operationId": "bulk_delete_traces_admin_traces_bulk_delete_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkIds"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/restrictions": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "List Restrictions",
        "operationId": "list_restrictions_admin_restrictions_get",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Type"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RestrictionOut"
                  },
                  "title": "Response List Restrictions Admin Restrictions Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Create Restriction",
        "operationId": "create_restriction_admin_restrictions_post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestrictionAdminCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestrictionOut"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/restrictions/{restriction_id}": {
      "patch": {
        "tags": [
          "admin"
        ],
        "summary": "Update Restriction",
        "operationId": "update_restriction_admin_restrictions__restriction_id__patch",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "restriction_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Restriction Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestrictionAdminUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestrictionOut"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "Delete Restriction",
        "operationId": "delete_restriction_admin_restrictions__restriction_id__delete",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "restriction_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Restriction Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/search/relevance": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get active relevance config",
        "operationId": "get_relevance_admin_search_relevance_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelevanceGetOut"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "admin"
        ],
        "summary": "Dry-run or apply relevance config",
        "operationId": "put_relevance_admin_search_relevance_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RelevancePutIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/search/relevance/rollback": {
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Rollback to specified relevance version",
        "operationId": "post_rollback_admin_search_relevance_rollback_post",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "toVersion",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Toversion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelevanceApplyOut"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/search/overview": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Search overview KPIs",
        "operationId": "get_overview_admin_search_overview_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchOverviewOut"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "nodes": {
              "application/json": {
                "examples": {
                  "missing": {
                    "summary": "Missing token",
                    "value": {
                      "error": {
                        "code": "AUTH_REQUIRED",
                        "message": "Authorization required"
                      }
                    }
                  },
                  "invalid": {
                    "summary": "Invalid token",
                    "value": {
                      "error": {
                        "code": "INVALID_TOKEN",
                        "message": "Invalid authentication token"
                      }
                    }
                  },
                  "expired": {
                    "summary": "Expired token",
                    "value": {
                      "error": {
                        "code": "TOKEN_EXPIRED",
                        "message": "Token has expired"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "nodes": {
              "application/json": {
                "example": {
                  "error": {
                    "code": "FORBIDDEN",
                    "message": "Forbidden"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/me": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Current user",
        "operationId": "read_me_users_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete account",
        "operationId": "delete_me_users_me_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Delete Me Users Me Delete"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update profile",
        "operationId": "update_me_users_me_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/": {
      "get": {
        "summary": "Read Root",
        "operationId": "read_root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AchievementAdminOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "code": {
            "type": "string",
            "title": "Code"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          },
          "visible": {
            "type": "boolean",
            "title": "Visible"
          },
          "condition": {
            "type": "object",
            "title": "Condition"
          },
          "created_by_user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By User Id"
          },
          "updated_by_user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By User Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "code",
          "title",
          "description",
          "icon",
          "visible",
          "condition",
          "created_by_user_id",
          "updated_by_user_id"
        ],
        "title": "AchievementAdminOut"
      },
      "AchievementCreateIn": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          },
          "visible": {
            "type": "boolean",
            "title": "Visible",
            "default": true
          },
          "condition": {
            "type": "object",
            "title": "Condition",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "code",
          "title"
        ],
        "title": "AchievementCreateIn"
      },
      "AchievementOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "code": {
            "type": "string",
            "title": "Code"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          },
          "unlocked": {
            "type": "boolean",
            "title": "Unlocked"
          },
          "unlocked_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unlocked At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "code",
          "title",
          "description",
          "icon",
          "unlocked",
          "unlocked_at"
        ],
        "title": "AchievementOut"
      },
      "AchievementUpdateIn": {
        "properties": {
          "code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          },
          "visible": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visible"
          },
          "condition": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Condition"
          }
        },
        "type": "object",
        "title": "AchievementUpdateIn"
      },
      "AdminEchoTraceOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "from_slug": {
            "type": "string",
            "title": "From Slug"
          },
          "to_slug": {
            "type": "string",
            "title": "To Slug"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source"
          },
          "channel": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Channel"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "from_slug",
          "to_slug",
          "user_id",
          "source",
          "channel",
          "created_at"
        ],
        "title": "AdminEchoTraceOut"
      },
      "AdminTransitionOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "from_slug": {
            "type": "string",
            "title": "From Slug"
          },
          "to_slug": {
            "type": "string",
            "title": "To Slug"
          },
          "type": {
            "$ref": "#/components/schemas/NodeTransitionType"
          },
          "weight": {
            "type": "integer",
            "title": "Weight"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label"
          },
          "created_by": {
            "type": "string",
            "format": "uuid",
            "title": "Created By"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "from_slug",
          "to_slug",
          "type",
          "weight",
          "label",
          "created_by",
          "created_at"
        ],
        "title": "AdminTransitionOut"
      },
      "AdminUserOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "wallet_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Wallet Address"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url"
          },
          "role": {
            "type": "string",
            "title": "Role"
          },
          "is_premium": {
            "type": "boolean",
            "title": "Is Premium"
          },
          "premium_until": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Premium Until"
          },
          "restrictions": {
            "items": {
              "$ref": "#/components/schemas/RestrictionOut"
            },
            "type": "array",
            "title": "Restrictions",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "email",
          "wallet_address",
          "is_active",
          "username",
          "bio",
          "avatar_url",
          "role",
          "is_premium",
          "premium_until",
          "restrictions"
        ],
        "title": "AdminUserOut"
      },
      "AliasOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "alias": {
            "type": "string",
            "title": "Alias"
          },
          "type": {
            "type": "string",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "id",
          "alias",
          "type"
        ],
        "title": "AliasOut"
      },
      "AuditLogOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "actor_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actor Id"
          },
          "action": {
            "type": "string",
            "title": "Action"
          },
          "resource_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resource Type"
          },
          "resource_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resource Id"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id"
          },
          "before": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Before"
          },
          "after": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "After"
          },
          "ip": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip"
          },
          "user_agent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Agent"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          }
        },
        "type": "object",
        "required": [
          "id",
          "actor_id",
          "action",
          "resource_type",
          "resource_id",
          "workspace_id",
          "before",
          "after",
          "ip",
          "user_agent",
          "created_at",
          "extra"
        ],
        "title": "AuditLogOut"
      },
      "AutofixReport": {
        "properties": {
          "applied": {
            "items": {
              "$ref": "#/components/schemas/AutofixResult"
            },
            "type": "array",
            "title": "Applied",
            "default": []
          },
          "skipped": {
            "items": {
              "$ref": "#/components/schemas/AutofixResult"
            },
            "type": "array",
            "title": "Skipped",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "applied",
          "skipped"
        ],
        "title": "AutofixReport"
      },
      "AutofixRequest": {
        "properties": {
          "actions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Actions",
            "default": []
          }
        },
        "type": "object",
        "title": "AutofixRequest"
      },
      "AutofixResult": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type"
          },
          "affected": {
            "type": "integer",
            "title": "Affected"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note"
          }
        },
        "type": "object",
        "required": [
          "type",
          "affected",
          "note"
        ],
        "title": "AutofixResult"
      },
      "BlacklistAdd": {
        "properties": {
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "slug"
        ],
        "title": "BlacklistAdd"
      },
      "BlacklistItem": {
        "properties": {
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "slug",
          "reason",
          "created_at"
        ],
        "title": "BlacklistItem"
      },
      "Body_upload_media_asset_admin_media_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_media_asset_admin_media_post"
      },
      "Body_upload_media_media_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_media_media_post"
      },
      "BroadcastCreate": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "default": "system"
          },
          "filters": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BroadcastFilters"
              },
              {
                "type": "null"
              }
            ]
          },
          "dry_run": {
            "type": "boolean",
            "title": "Dry Run",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "title",
          "message"
        ],
        "title": "BroadcastCreate"
      },
      "BroadcastFilters": {
        "properties": {
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "is_premium": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Premium"
          },
          "created_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created From"
          },
          "created_to": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created To"
          }
        },
        "type": "object",
        "title": "BroadcastFilters"
      },
      "BulkIds": {
        "properties": {
          "ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Ids"
          }
        },
        "type": "object",
        "required": [
          "ids"
        ],
        "title": "BulkIds"
      },
      "CampaignUpdate": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "title",
          "message"
        ],
        "title": "CampaignUpdate"
      },
      "ChangePasswordIn": {
        "properties": {
          "old_password": {
            "type": "string",
            "title": "Old Password"
          },
          "new_password": {
            "type": "string",
            "title": "New Password"
          }
        },
        "type": "object",
        "required": [
          "old_password",
          "new_password"
        ],
        "title": "ChangePasswordIn"
      },
      "EVMVerify": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "signature": {
            "type": "string",
            "title": "Signature"
          },
          "wallet_address": {
            "type": "string",
            "title": "Wallet Address"
          }
        },
        "type": "object",
        "required": [
          "message",
          "signature",
          "wallet_address"
        ],
        "title": "EVMVerify"
      },
      "FeatureFlagOut": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "value": {
            "type": "boolean",
            "title": "Value"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          }
        },
        "type": "object",
        "required": [
          "key",
          "value",
          "description",
          "updated_at",
          "updated_by"
        ],
        "title": "FeatureFlagOut"
      },
      "FeatureFlagUpdateIn": {
        "properties": {
          "value": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "title": "FeatureFlagUpdateIn"
      },
      "GraphEdgeInput": {
        "properties": {
          "from_node_key": {
            "type": "string",
            "title": "From Node Key"
          },
          "to_node_key": {
            "type": "string",
            "title": "To Node Key"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label"
          },
          "condition": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Condition"
          }
        },
        "type": "object",
        "required": [
          "from_node_key",
          "to_node_key"
        ],
        "title": "GraphEdge"
      },
      "GraphEdgeOutput": {
        "properties": {
          "from_node_key": {
            "type": "string",
            "title": "From Node Key"
          },
          "to_node_key": {
            "type": "string",
            "title": "To Node Key"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label"
          },
          "condition": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Condition"
          }
        },
        "type": "object",
        "required": [
          "from_node_key",
          "to_node_key",
          "label",
          "condition"
        ],
        "title": "GraphEdge"
      },
      "GraphNodeInput": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "default": "normal"
          },
          "content": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "rewards": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rewards"
          }
        },
        "type": "object",
        "required": [
          "key",
          "title"
        ],
        "title": "GraphNode"
      },
      "GraphNodeOutput": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "default": "normal"
          },
          "content": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "rewards": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rewards"
          }
        },
        "type": "object",
        "required": [
          "key",
          "title",
          "type",
          "content",
          "rewards"
        ],
        "title": "GraphNode"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "InvalidatePatternRequest": {
        "properties": {
          "pattern": {
            "type": "string",
            "title": "Pattern"
          }
        },
        "type": "object",
        "required": [
          "pattern"
        ],
        "title": "InvalidatePatternRequest"
      },
      "LoginResponse": {
        "properties": {
          "ok": {
            "type": "boolean",
            "title": "Ok",
            "default": true
          },
          "csrf_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Csrf Token"
          },
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "refresh_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          }
        },
        "type": "object",
        "required": [
          "ok",
          "csrf_token",
          "access_token",
          "refresh_token",
          "token_type"
        ],
        "title": "LoginResponse"
      },
      "LoginSchema": {
        "properties": {
          "login": {
            "type": "string",
            "title": "Login"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "login",
          "password"
        ],
        "title": "LoginSchema"
      },
      "MediaAssetOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "workspace_id": {
            "type": "string",
            "format": "uuid",
            "title": "Workspace Id"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "metadata_json": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata Json"
          }
        },
        "type": "object",
        "required": [
          "id",
          "workspace_id",
          "url",
          "type",
          "metadata_json"
        ],
        "title": "MediaAssetOut"
      },
      "MergeIn": {
        "properties": {
          "from_id": {
            "type": "string",
            "format": "uuid",
            "title": "From Id"
          },
          "to_id": {
            "type": "string",
            "format": "uuid",
            "title": "To Id"
          },
          "dryRun": {
            "type": "boolean",
            "title": "Dryrun",
            "default": true
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "from_id",
          "to_id"
        ],
        "title": "MergeIn"
      },
      "MergeReport": {
        "properties": {
          "from": {
            "type": "object",
            "title": "From"
          },
          "to": {
            "type": "object",
            "title": "To"
          },
          "content_touched": {
            "type": "integer",
            "title": "Content Touched"
          },
          "aliases_moved": {
            "type": "integer",
            "title": "Aliases Moved"
          },
          "warnings": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Warnings"
          },
          "errors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Errors"
          }
        },
        "type": "object",
        "required": [
          "from",
          "to",
          "content_touched",
          "aliases_moved",
          "warnings",
          "errors"
        ],
        "title": "MergeReport"
      },
      "MetricsSummary": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "error_count": {
            "type": "integer",
            "title": "Error Count"
          },
          "rps": {
            "type": "number",
            "title": "Rps"
          },
          "error_rate": {
            "type": "number",
            "title": "Error Rate"
          },
          "p95_latency": {
            "type": "number",
            "title": "P95 Latency"
          },
          "p99_latency": {
            "type": "number",
            "title": "P99 Latency"
          },
          "count_429": {
            "type": "integer",
            "title": "Count 429"
          }
        },
        "type": "object",
        "required": [
          "count",
          "error_count",
          "rps",
          "error_rate",
          "p95_latency",
          "p99_latency",
          "count_429"
        ],
        "title": "MetricsSummary"
      },
      "NodeOut": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "content": {
            "title": "Content"
          },
          "media": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Media"
          },
          "coverUrl": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Coverurl"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "isPublic": {
            "type": "boolean",
            "title": "Ispublic",
            "default": false
          },
          "isVisible": {
            "type": "boolean",
            "title": "Isvisible",
            "default": true
          },
          "meta": {
            "type": "object",
            "title": "Meta"
          },
          "premium_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Premium Only"
          },
          "nftRequired": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nftrequired"
          },
          "aiGenerated": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Aigenerated"
          },
          "allow_feedback": {
            "type": "boolean",
            "title": "Allow Feedback",
            "default": true
          },
          "isRecommendable": {
            "type": "boolean",
            "title": "Isrecommendable",
            "default": true
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "authorId": {
            "type": "string",
            "format": "uuid",
            "title": "Authorid"
          },
          "createdByUserId": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Createdbyuserid"
          },
          "updatedByUserId": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updatedbyuserid"
          },
          "views": {
            "type": "integer",
            "title": "Views"
          },
          "reactions": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Reactions"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Updatedat"
          },
          "popularityScore": {
            "type": "number",
            "title": "Popularityscore"
          }
        },
        "type": "object",
        "required": [
          "title",
          "content",
          "media",
          "coverUrl",
          "tags",
          "isPublic",
          "isVisible",
          "meta",
          "premium_only",
          "nftRequired",
          "aiGenerated",
          "allow_feedback",
          "isRecommendable",
          "id",
          "slug",
          "authorId",
          "createdByUserId",
          "updatedByUserId",
          "views",
          "reactions",
          "createdAt",
          "updatedAt",
          "popularityScore"
        ],
        "title": "NodeOut"
      },
      "NodePatchCreate": {
        "properties": {
          "node_id": {
            "type": "string",
            "format": "uuid",
            "title": "Node Id"
          },
          "data": {
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "node_id",
          "data"
        ],
        "title": "NodePatchCreate"
      },
      "NodePatchOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "node_id": {
            "type": "string",
            "format": "uuid",
            "title": "Node Id"
          },
          "data": {
            "type": "object",
            "title": "Data"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "reverted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reverted At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "node_id",
          "data",
          "created_at",
          "reverted_at"
        ],
        "title": "NodePatchOut"
      },
      "NodeTraceCreate": {
        "properties": {
          "node_id": {
            "type": "string",
            "format": "uuid",
            "title": "Node Id"
          },
          "kind": {
            "$ref": "#/components/schemas/NodeTraceKind"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "visibility": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NodeTraceVisibility"
              }
            ],
            "default": "public"
          }
        },
        "type": "object",
        "required": [
          "node_id",
          "kind"
        ],
        "title": "NodeTraceCreate"
      },
      "NodeTraceKind": {
        "type": "string",
        "enum": [
          "auto",
          "manual",
          "quest_hint"
        ],
        "title": "NodeTraceKind"
      },
      "NodeTraceOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TraceUser"
              },
              {
                "type": "null"
              }
            ]
          },
          "kind": {
            "$ref": "#/components/schemas/NodeTraceKind"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "visibility": {
            "$ref": "#/components/schemas/NodeTraceVisibility"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "user",
          "kind",
          "comment",
          "tags",
          "visibility"
        ],
        "title": "NodeTraceOut"
      },
      "NodeTraceVisibility": {
        "type": "string",
        "enum": [
          "public",
          "private",
          "system"
        ],
        "title": "NodeTraceVisibility"
      },
      "NodeTransitionType": {
        "type": "string",
        "enum": [
          "manual",
          "locked"
        ],
        "title": "NodeTransitionType"
      },
      "NodeTransitionUpdate": {
        "properties": {
          "from_slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "From Slug",
            "example": "start"
          },
          "to_slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "To Slug",
            "example": "end"
          },
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label",
            "example": "Go next"
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NodeTransitionType"
              },
              {
                "type": "null"
              }
            ]
          },
          "condition": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TransitionCondition"
              },
              {
                "type": "null"
              }
            ],
            "example": {
              "premium_required": true
            }
          },
          "weight": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Weight",
            "example": 1
          }
        },
        "type": "object",
        "title": "NodeTransitionUpdate"
      },
      "NotificationOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "read_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read At"
          },
          "type": {
            "$ref": "#/components/schemas/NotificationType"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "message",
          "created_at",
          "read_at",
          "type"
        ],
        "title": "NotificationOut"
      },
      "NotificationType": {
        "type": "string",
        "enum": [
          "quest",
          "system",
          "moderation"
        ],
        "title": "NotificationType"
      },
      "PopularityRecomputeRequest": {
        "properties": {
          "node_slugs": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Node Slugs"
          }
        },
        "type": "object",
        "title": "PopularityRecomputeRequest"
      },
      "PublishRequest": {
        "properties": {
          "access": {
            "type": "string",
            "enum": [
              "premium_only",
              "everyone",
              "early_access"
            ],
            "title": "Access",
            "default": "everyone"
          },
          "cover_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cover Url"
          },
          "style_preset": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Style Preset"
          }
        },
        "type": "object",
        "title": "PublishRequest"
      },
      "QuestBuyIn": {
        "properties": {
          "payment_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Token"
          }
        },
        "type": "object",
        "title": "QuestBuyIn"
      },
      "QuestCreate": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "subtitle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subtitle"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "cover_image": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cover Image"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "default": []
          },
          "price": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price"
          },
          "is_premium_only": {
            "type": "boolean",
            "title": "Is Premium Only",
            "default": false
          },
          "entry_node_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entry Node Id"
          },
          "nodes": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Nodes",
            "default": []
          },
          "custom_transitions": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Transitions"
          },
          "allow_comments": {
            "type": "boolean",
            "title": "Allow Comments",
            "default": true
          },
          "structure": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Structure"
          },
          "length": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Length"
          },
          "tone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tone"
          },
          "genre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Genre"
          },
          "locale": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Locale"
          },
          "cost_generation": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost Generation"
          }
        },
        "type": "object",
        "required": [
          "title"
        ],
        "title": "QuestCreate"
      },
      "QuestCreateIn": {
        "properties": {
          "key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Key"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "title"
        ],
        "title": "QuestCreateIn"
      },
      "QuestOut": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "subtitle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subtitle"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "cover_image": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cover Image"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "default": []
          },
          "price": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price"
          },
          "is_premium_only": {
            "type": "boolean",
            "title": "Is Premium Only",
            "default": false
          },
          "entry_node_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entry Node Id"
          },
          "nodes": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Nodes",
            "default": []
          },
          "custom_transitions": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Transitions"
          },
          "allow_comments": {
            "type": "boolean",
            "title": "Allow Comments",
            "default": true
          },
          "structure": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Structure"
          },
          "length": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Length"
          },
          "tone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tone"
          },
          "genre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Genre"
          },
          "locale": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Locale"
          },
          "cost_generation": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost Generation"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "author_id": {
            "type": "string",
            "format": "uuid",
            "title": "Author Id"
          },
          "is_draft": {
            "type": "boolean",
            "title": "Is Draft"
          },
          "published_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Published At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by_user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By User Id"
          },
          "updated_by_user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By User Id"
          }
        },
        "type": "object",
        "required": [
          "title",
          "subtitle",
          "description",
          "cover_image",
          "tags",
          "price",
          "is_premium_only",
          "entry_node_id",
          "nodes",
          "custom_transitions",
          "allow_comments",
          "structure",
          "length",
          "tone",
          "genre",
          "locale",
          "cost_generation",
          "id",
          "slug",
          "author_id",
          "is_draft",
          "published_at",
          "created_at",
          "created_by_user_id",
          "updated_by_user_id"
        ],
        "title": "QuestOut"
      },
      "QuestProgressOut": {
        "properties": {
          "current_node_id": {
            "type": "string",
            "format": "uuid",
            "title": "Current Node Id"
          },
          "started_at": {
            "type": "string",
            "format": "date-time",
            "title": "Started At"
          }
        },
        "type": "object",
        "required": [
          "current_node_id",
          "started_at"
        ],
        "title": "QuestProgressOut"
      },
      "QuestSummary": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "current_version_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Version Id"
          },
          "versions": {
            "items": {
              "$ref": "#/components/schemas/VersionSummaryOutput"
            },
            "type": "array",
            "title": "Versions"
          }
        },
        "type": "object",
        "required": [
          "id",
          "slug",
          "title",
          "current_version_id",
          "versions"
        ],
        "title": "QuestSummary"
      },
      "QuestUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "subtitle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subtitle"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "cover_image": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cover Image"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "default": []
          },
          "price": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price"
          },
          "is_premium_only": {
            "type": "boolean",
            "title": "Is Premium Only",
            "default": false
          },
          "entry_node_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entry Node Id"
          },
          "nodes": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Nodes",
            "default": []
          },
          "custom_transitions": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Transitions"
          },
          "allow_comments": {
            "type": "boolean",
            "title": "Allow Comments",
            "default": true
          },
          "structure": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Structure"
          },
          "length": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Length"
          },
          "tone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tone"
          },
          "genre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Genre"
          },
          "locale": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Locale"
          },
          "cost_generation": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost Generation"
          }
        },
        "type": "object",
        "title": "QuestUpdate"
      },
      "RateLimitDisablePayload": {
        "properties": {
          "disabled": {
            "type": "boolean",
            "title": "Disabled",
            "default": true
          }
        },
        "type": "object",
        "title": "RateLimitDisablePayload"
      },
      "RelevanceApplyOut": {
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          },
          "payload": {
            "$ref": "#/components/schemas/RelevancePayloadOutput"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "version",
          "payload",
          "updated_at"
        ],
        "title": "RelevanceApplyOut"
      },
      "RelevanceBoostsInput": {
        "properties": {
          "freshness": {
            "type": "object",
            "title": "Freshness"
          },
          "popularity": {
            "type": "object",
            "title": "Popularity"
          }
        },
        "type": "object",
        "title": "RelevanceBoosts"
      },
      "RelevanceBoostsOutput": {
        "properties": {
          "freshness": {
            "type": "object",
            "title": "Freshness"
          },
          "popularity": {
            "type": "object",
            "title": "Popularity"
          }
        },
        "type": "object",
        "required": [
          "freshness",
          "popularity"
        ],
        "title": "RelevanceBoosts"
      },
      "RelevanceGetOut": {
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          },
          "payload": {
            "$ref": "#/components/schemas/RelevancePayloadOutput"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "version",
          "payload",
          "updated_at"
        ],
        "title": "RelevanceGetOut"
      },
      "RelevancePayloadInput": {
        "properties": {
          "weights": {
            "$ref": "#/components/schemas/RelevanceWeightsInput"
          },
          "boosts": {
            "$ref": "#/components/schemas/RelevanceBoostsInput"
          },
          "query": {
            "$ref": "#/components/schemas/RelevanceQueryParamsInput"
          }
        },
        "type": "object",
        "title": "RelevancePayload"
      },
      "RelevancePayloadOutput": {
        "properties": {
          "weights": {
            "$ref": "#/components/schemas/RelevanceWeightsOutput"
          },
          "boosts": {
            "$ref": "#/components/schemas/RelevanceBoostsOutput"
          },
          "query": {
            "$ref": "#/components/schemas/RelevanceQueryParamsOutput"
          }
        },
        "type": "object",
        "required": [
          "weights",
          "boosts",
          "query"
        ],
        "title": "RelevancePayload"
      },
      "RelevancePutIn": {
        "properties": {
          "payload": {
            "$ref": "#/components/schemas/RelevancePayloadInput"
          },
          "dryRun": {
            "type": "boolean",
            "title": "Dryrun",
            "default": false
          },
          "sample": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Sample"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          }
        },
        "type": "object",
        "required": [
          "payload"
        ],
        "title": "RelevancePutIn"
      },
      "RelevanceQueryParamsInput": {
        "properties": {
          "fuzziness": {
            "type": "string",
            "title": "Fuzziness",
            "default": "AUTO"
          },
          "min_should_match": {
            "type": "string",
            "title": "Min Should Match",
            "default": "2<75%"
          },
          "phrase_slop": {
            "type": "integer",
            "title": "Phrase Slop",
            "default": 0
          },
          "tie_breaker": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tie Breaker"
          }
        },
        "type": "object",
        "title": "RelevanceQueryParams"
      },
      "RelevanceQueryParamsOutput": {
        "properties": {
          "fuzziness": {
            "type": "string",
            "title": "Fuzziness",
            "default": "AUTO"
          },
          "min_should_match": {
            "type": "string",
            "title": "Min Should Match",
            "default": "2<75%"
          },
          "phrase_slop": {
            "type": "integer",
            "title": "Phrase Slop",
            "default": 0
          },
          "tie_breaker": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tie Breaker"
          }
        },
        "type": "object",
        "required": [
          "fuzziness",
          "min_should_match",
          "phrase_slop",
          "tie_breaker"
        ],
        "title": "RelevanceQueryParams"
      },
      "RelevanceWeightsInput": {
        "properties": {
          "title": {
            "type": "number",
            "title": "Title",
            "default": 3.0
          },
          "body": {
            "type": "number",
            "title": "Body",
            "default": 1.0
          },
          "tags": {
            "type": "number",
            "title": "Tags",
            "default": 1.5
          },
          "author": {
            "type": "number",
            "title": "Author",
            "default": 0.5
          }
        },
        "type": "object",
        "title": "RelevanceWeights"
      },
      "RelevanceWeightsOutput": {
        "properties": {
          "title": {
            "type": "number",
            "title": "Title",
            "default": 3.0
          },
          "body": {
            "type": "number",
            "title": "Body",
            "default": 1.0
          },
          "tags": {
            "type": "number",
            "title": "Tags",
            "default": 1.5
          },
          "author": {
            "type": "number",
            "title": "Author",
            "default": 0.5
          }
        },
        "type": "object",
        "required": [
          "title",
          "body",
          "tags",
          "author"
        ],
        "title": "RelevanceWeights"
      },
      "RestrictionAdminCreate": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "type": {
            "type": "string",
            "enum": [
              "ban",
              "post_restrict"
            ],
            "title": "Type"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "type"
        ],
        "title": "RestrictionAdminCreate"
      },
      "RestrictionAdminUpdate": {
        "properties": {
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          }
        },
        "type": "object",
        "title": "RestrictionAdminUpdate"
      },
      "RestrictionOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "issued_by": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Issued By"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "type",
          "reason",
          "created_at",
          "expires_at",
          "issued_by"
        ],
        "title": "RestrictionOut"
      },
      "RuleUpdatePayload": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "rule": {
            "type": "string",
            "title": "Rule"
          }
        },
        "type": "object",
        "required": [
          "key",
          "rule"
        ],
        "title": "RuleUpdatePayload"
      },
      "SearchOverviewOut": {
        "properties": {
          "zrr": {
            "type": "object",
            "title": "Zrr"
          },
          "ctr": {
            "type": "object",
            "title": "Ctr"
          },
          "latency": {
            "type": "object",
            "title": "Latency"
          },
          "index": {
            "type": "object",
            "title": "Index"
          },
          "activeConfigs": {
            "type": "object",
            "title": "Activeconfigs"
          }
        },
        "type": "object",
        "required": [
          "zrr",
          "ctr",
          "latency",
          "index",
          "activeConfigs"
        ],
        "title": "SearchOverviewOut"
      },
      "SendNotificationPayload": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NotificationType"
              }
            ],
            "default": "system"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "title",
          "message"
        ],
        "title": "SendNotificationPayload"
      },
      "SignupSchema": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "username": {
            "type": "string",
            "title": "Username"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "email",
          "password",
          "username"
        ],
        "title": "SignupSchema"
      },
      "SimulateIn": {
        "properties": {
          "inputs": {
            "type": "object",
            "title": "Inputs"
          }
        },
        "type": "object",
        "title": "SimulateIn"
      },
      "SimulateResult": {
        "properties": {
          "steps": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Steps"
          },
          "rewards": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Rewards"
          }
        },
        "type": "object",
        "required": [
          "steps",
          "rewards"
        ],
        "title": "SimulateResult"
      },
      "SubscriptionPlanIn": {
        "properties": {
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "price_cents": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Cents"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "order": {
            "type": "integer",
            "title": "Order",
            "default": 100
          },
          "monthly_limits": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Monthly Limits"
          },
          "features": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Features"
          }
        },
        "type": "object",
        "required": [
          "slug",
          "title"
        ],
        "title": "SubscriptionPlanIn"
      },
      "SubscriptionPlanOut": {
        "properties": {
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "price_cents": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Cents"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active",
            "default": true
          },
          "order": {
            "type": "integer",
            "title": "Order",
            "default": 100
          },
          "monthly_limits": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Monthly Limits"
          },
          "features": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Features"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "slug",
          "title",
          "description",
          "price_cents",
          "currency",
          "is_active",
          "order",
          "monthly_limits",
          "features",
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "SubscriptionPlanOut"
      },
      "TagCreate": {
        "properties": {
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "slug",
          "name"
        ],
        "title": "TagCreate"
      },
      "TagListItem": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "usage_count": {
            "type": "integer",
            "title": "Usage Count",
            "default": 0
          },
          "aliases_count": {
            "type": "integer",
            "title": "Aliases Count",
            "default": 0
          },
          "is_hidden": {
            "type": "boolean",
            "title": "Is Hidden",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "slug",
          "name",
          "created_at",
          "usage_count",
          "aliases_count",
          "is_hidden"
        ],
        "title": "TagListItem"
      },
      "TagOut": {
        "properties": {
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "slug",
          "name",
          "count"
        ],
        "title": "TagOut"
      },
      "TagUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "hidden": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hidden"
          }
        },
        "type": "object",
        "title": "TagUpdate"
      },
      "Token": {
        "properties": {
          "token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Token"
          }
        },
        "type": "object",
        "title": "Token"
      },
      "TraceUser": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          }
        },
        "type": "object",
        "required": [
          "id",
          "username"
        ],
        "title": "TraceUser"
      },
      "TransitionCondition": {
        "properties": {
          "premium_required": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Premium Required",
            "example": true
          },
          "nft_required": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nft Required",
            "example": "cool-nft"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "example": [
              "tag-a",
              "tag-b"
            ]
          },
          "cooldown": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Cooldown",
            "example": 3600
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "TransitionCondition",
        "description": "Schema for manual transition conditions."
      },
      "TransitionDisableRequest": {
        "properties": {
          "slug": {
            "type": "string",
            "title": "Slug",
            "example": "intro"
          }
        },
        "type": "object",
        "required": [
          "slug"
        ],
        "title": "TransitionDisableRequest"
      },
      "UserIdIn": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "user_id"
        ],
        "title": "UserIdIn"
      },
      "UserOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "wallet_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Wallet Address"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url"
          },
          "role": {
            "type": "string",
            "title": "Role"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "email",
          "wallet_address",
          "is_active",
          "username",
          "bio",
          "avatar_url",
          "role"
        ],
        "title": "UserOut"
      },
      "UserPremiumUpdate": {
        "properties": {
          "is_premium": {
            "type": "boolean",
            "title": "Is Premium"
          },
          "premium_until": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Premium Until"
          }
        },
        "type": "object",
        "required": [
          "is_premium"
        ],
        "title": "UserPremiumUpdate"
      },
      "UserRoleUpdate": {
        "properties": {
          "role": {
            "type": "string",
            "enum": [
              "user",
              "moderator",
              "admin"
            ],
            "title": "Role"
          }
        },
        "type": "object",
        "required": [
          "role"
        ],
        "title": "UserRoleUpdate"
      },
      "UserUpdate": {
        "properties": {
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url"
          }
        },
        "type": "object",
        "title": "UserUpdate"
      },
      "ValidateResult": {
        "properties": {
          "ok": {
            "type": "boolean",
            "title": "Ok"
          },
          "errors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Errors"
          },
          "warnings": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Warnings"
          }
        },
        "type": "object",
        "required": [
          "ok",
          "errors",
          "warnings"
        ],
        "title": "ValidateResult"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "ValidationItem": {
        "properties": {
          "level": {
            "type": "string",
            "enum": [
              "error",
              "warning",
              "info"
            ],
            "title": "Level"
          },
          "code": {
            "type": "string",
            "title": "Code"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "node_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Node Id"
          },
          "hint": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hint"
          }
        },
        "type": "object",
        "required": [
          "level",
          "code",
          "message",
          "node_id",
          "hint"
        ],
        "title": "ValidationItem"
      },
      "ValidationReport": {
        "properties": {
          "errors": {
            "type": "integer",
            "title": "Errors"
          },
          "warnings": {
            "type": "integer",
            "title": "Warnings"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/ValidationItem"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "errors",
          "warnings",
          "items"
        ],
        "title": "ValidationReport"
      },
      "VersionGraphInput": {
        "properties": {
          "version": {
            "$ref": "#/components/schemas/VersionSummaryInput"
          },
          "nodes": {
            "items": {
              "$ref": "#/components/schemas/GraphNodeInput"
            },
            "type": "array",
            "title": "Nodes"
          },
          "edges": {
            "items": {
              "$ref": "#/components/schemas/GraphEdgeInput"
            },
            "type": "array",
            "title": "Edges"
          }
        },
        "type": "object",
        "required": [
          "version",
          "nodes",
          "edges"
        ],
        "title": "VersionGraph"
      },
      "VersionGraphOutput": {
        "properties": {
          "version": {
            "$ref": "#/components/schemas/VersionSummaryOutput"
          },
          "nodes": {
            "items": {
              "$ref": "#/components/schemas/GraphNodeOutput"
            },
            "type": "array",
            "title": "Nodes"
          },
          "edges": {
            "items": {
              "$ref": "#/components/schemas/GraphEdgeOutput"
            },
            "type": "array",
            "title": "Edges"
          }
        },
        "type": "object",
        "required": [
          "version",
          "nodes",
          "edges"
        ],
        "title": "VersionGraph"
      },
      "VersionSummaryInput": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "quest_id": {
            "type": "string",
            "format": "uuid",
            "title": "Quest Id"
          },
          "number": {
            "type": "integer",
            "title": "Number"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "released_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Released At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "quest_id",
          "number",
          "status",
          "created_at"
        ],
        "title": "VersionSummary"
      },
      "VersionSummaryOutput": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "quest_id": {
            "type": "string",
            "format": "uuid",
            "title": "Quest Id"
          },
          "number": {
            "type": "integer",
            "title": "Number"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "released_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Released At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "quest_id",
          "number",
          "status",
          "created_at",
          "released_at"
        ],
        "title": "VersionSummary"
      },
      "WorkspaceIn": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slug"
          },
          "settings": {
            "$ref": "#/components/schemas/WorkspaceSettingsInput"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WorkspaceType"
              }
            ],
            "default": "team"
          },
          "is_system": {
            "type": "boolean",
            "title": "Is System",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "WorkspaceIn"
      },
      "WorkspaceMemberIn": {
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "role": {
            "$ref": "#/components/schemas/WorkspaceRole"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "role"
        ],
        "title": "WorkspaceMemberIn"
      },
      "WorkspaceMemberOut": {
        "properties": {
          "workspace_id": {
            "type": "string",
            "format": "uuid",
            "title": "Workspace Id"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "role": {
            "$ref": "#/components/schemas/WorkspaceRole"
          }
        },
        "type": "object",
        "required": [
          "workspace_id",
          "user_id",
          "role"
        ],
        "title": "WorkspaceMemberOut"
      },
      "WorkspaceOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "owner_user_id": {
            "type": "string",
            "format": "uuid",
            "title": "Owner User Id"
          },
          "settings_json": {
            "$ref": "#/components/schemas/WorkspaceSettingsOutput"
          },
          "type": {
            "$ref": "#/components/schemas/WorkspaceType"
          },
          "is_system": {
            "type": "boolean",
            "title": "Is System"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkspaceRole"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "slug",
          "owner_user_id",
          "settings_json",
          "type",
          "is_system",
          "created_at",
          "updated_at",
          "role"
        ],
        "title": "WorkspaceOut"
      },
      "WorkspaceRole": {
        "type": "string",
        "enum": [
          "owner",
          "editor",
          "viewer"
        ],
        "title": "WorkspaceRole"
      },
      "WorkspaceSettingsInput": {
        "properties": {
          "ai_presets": {
            "type": "object",
            "title": "Ai Presets"
          },
          "notifications": {
            "type": "object",
            "title": "Notifications"
          },
          "limits": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Limits"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "WorkspaceSettings"
      },
      "WorkspaceSettingsOutput": {
        "properties": {
          "ai_presets": {
            "type": "object",
            "title": "Ai Presets"
          },
          "notifications": {
            "type": "object",
            "title": "Notifications"
          },
          "limits": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Limits"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "ai_presets",
          "notifications",
          "limits"
        ],
        "title": "WorkspaceSettings"
      },
      "WorkspaceType": {
        "type": "string",
        "enum": [
          "personal",
          "team",
          "global"
        ],
        "title": "WorkspaceType"
      },
      "WorkspaceUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slug"
          },
          "settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkspaceSettingsInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkspaceType"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_system": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is System"
          }
        },
        "type": "object",
        "title": "WorkspaceUpdate"
      },
      "WorkspaceWithRoleOut": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "owner_user_id": {
            "type": "string",
            "format": "uuid",
            "title": "Owner User Id"
          },
          "settings_json": {
            "$ref": "#/components/schemas/WorkspaceSettingsOutput"
          },
          "type": {
            "$ref": "#/components/schemas/WorkspaceType"
          },
          "is_system": {
            "type": "boolean",
            "title": "Is System"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "role": {
            "$ref": "#/components/schemas/WorkspaceRole"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "slug",
          "owner_user_id",
          "settings_json",
          "type",
          "is_system",
          "created_at",
          "updated_at",
          "role"
        ],
        "title": "WorkspaceWithRoleOut"
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}