from __future__ import annotations

from typing import Protocol, runtime_checkable

from domains.product.tags.domain.admin_models import (
    AliasView,
    BlacklistItem,
    TagListItem,
)


@runtime_checkable
class AdminRepo(Protocol):
    def list_with_counters(
        self, q: str | None, limit: int, offset: int, content_type: str | None = None
    ) -> list[TagListItem]: ...
    def list_aliases(self, tag_id: str) -> list[AliasView]: ...
    def add_alias(self, tag_id: str, alias: str) -> AliasView: ...
    def remove_alias(self, alias_id: str) -> None: ...
    def blacklist_list(self, q: str | None) -> list[BlacklistItem]: ...
    def blacklist_add(self, slug: str, reason: str | None) -> BlacklistItem: ...
    def blacklist_delete(self, slug: str) -> None: ...
    def create_tag(self, slug: str, name: str) -> TagListItem: ...
    def delete_tag(self, tag_id: str) -> None: ...
    def merge_dry_run(
        self, from_id: str, to_id: str, content_type: str | None = None
    ) -> dict: ...
    def merge_apply(
        self,
        from_id: str,
        to_id: str,
        actor_id: str | None,
        reason: str | None,
        content_type: str | None = None,
    ) -> dict: ...
